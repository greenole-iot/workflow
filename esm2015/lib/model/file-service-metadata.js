export class FileServiceMetadata {
    static fromFile(domainId, file, user) {
        let fileServiceMetadata = new FileServiceMetadata();
        fileServiceMetadata.domainId = domainId;
        fileServiceMetadata.subDomainId = "users";
        fileServiceMetadata.name = file.name;
        fileServiceMetadata.type = file.name.substring(file.name.lastIndexOf(".") + 1);
        fileServiceMetadata.timestamp = Date.now();
        fileServiceMetadata.tags = null;
        fileServiceMetadata.entryType = "FILE";
        fileServiceMetadata.size = file.size;
        fileServiceMetadata.path = [
            fileServiceMetadata.domainId,
            fileServiceMetadata.subDomainId,
            user
        ];
        return fileServiceMetadata;
    }
    isFolder() {
        return "DIRECTORY" === this.entryType;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1zZXJ2aWNlLW1ldGFkYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvd29ya2Zsb3cvc3JjL2xpYi9tb2RlbC9maWxlLXNlcnZpY2UtbWV0YWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxPQUFPLG1CQUFtQjtJQXlCNUIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFnQixFQUFDLElBQVUsRUFBRSxJQUFhO1FBQ3RELElBQUksbUJBQW1CLEdBQUcsSUFBSSxtQkFBbUIsRUFBRSxDQUFDO1FBQ3BELG1CQUFtQixDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDeEMsbUJBQW1CLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQztRQUMxQyxtQkFBbUIsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNyQyxtQkFBbUIsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0UsbUJBQW1CLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMzQyxtQkFBbUIsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hDLG1CQUFtQixDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUM7UUFDdkMsbUJBQW1CLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDckMsbUJBQW1CLENBQUMsSUFBSSxHQUFHO1lBQ3ZCLG1CQUFtQixDQUFDLFFBQVE7WUFDNUIsbUJBQW1CLENBQUMsV0FBVztZQUMvQixJQUFJO1NBQ1AsQ0FBQTtRQUNELE9BQU8sbUJBQW1CLENBQUM7SUFDL0IsQ0FBQztJQUVELFFBQVE7UUFDSixPQUFPLFdBQVcsS0FBSyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFDLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3BlcnRpZXNTZXJ2aWNlIH0gZnJvbSBcIkBhbGlzL25nLWJhc2VcIjtcblxuZXhwb3J0IGNsYXNzIEZpbGVTZXJ2aWNlTWV0YWRhdGEge1xuICAgIGRvbWFpbklkOiBzdHJpbmc7IC8vXCJhZXN0ZXN0c1wiXG4gICAgdHJhY2VUeXBlOiBzdHJpbmc7IC8vXCJmaWxlXCJcbiAgICBvYmplY3RJZDogc3RyaW5nOyAvL1wiNDVjYjM0YTQtYWVjNi00ZDYyLThhY2QtNmNiMzYxY2ZmMjZkXCJcbiAgICBzdWJEb21haW5JZDogc3RyaW5nOyAvL1wiZmlsZXRlc3RcIlxuICAgIHRpbWVzdGFtcDogbnVtYmVyOyAvLzE2MTEyMzM4OTgyNTlcbiAgICB0YWdzOiBzdHJpbmc7ICAvL251bGxcbiAgICBkZWxldGlvbkRhdGVUaW1lc3RhbXA6IG51bWJlcjsgLy8xNjExMjMzOTQxMzAwXG4gICAgbGluazogc3RyaW5nOyAvL1wiXCJcbiAgICBlbnRyeVR5cGU6IHN0cmluZzsgLy9GSUxFIG9yIERJUkVDVE9SWVxuICAgIGNyZWF0aW9uRGF0ZTogc3RyaW5nOyAvL1wiMjAyMS0wMS0yMVQxMjo1ODoxOC4yNTk5Nzc3MDBaXCJcbiAgICB0eXBlOiBzdHJpbmc7IC8vZG9jXG4gICAgY3JlYXRpb25EYXRlVGltZXN0YW1wOiBudW1iZXI7IC8vMTYxMTIzMzg5ODI1OVxuICAgIGNyZWF0ZWRBdDogc3RyaW5nOyAvL1wiMjAyMS0wMS0wOVQxNzowMDowMC0wMzowMFwiXG4gICAgcGF0aDogQXJyYXk8c3RyaW5nPjsgLy9bXCJhZXN0ZXN0c1wiLCBcImZpbGV0ZXN0XCJdXG4gICAgbGFzdEFjY2Vzc0J5OiBzdHJpbmc7IC8vXCJPYmVyZGFuXCJcbiAgICBzaXplOiBudW1iZXI7IC8vXCIxNzYzNzM4XCJcbiAgICBjcmVhdGVkQnk6IHN0cmluZzsgLy9cIk9iZXJkYW5cIlxuICAgIGRlbGV0aW9uRGF0ZTogc3RyaW5nOyAvL1wiMjAyMS0wMS0yMVQxMjo1OTowMS4zMDA4OTVaXCJcbiAgICBsYXN0QWNjZXNzRGF0ZTogc3RyaW5nOyAvL1wiMjAyMS0wMS0yMVQxMjo1ODo1Mi41MDU3MjUxMDBaXCJcbiAgICBuYW1lOiBzdHJpbmc7IC8vXCJBcnF1aXZvIDc3XCJcbiAgICBsb2NhdGlvbjogc3RyaW5nOyAvL1wiL2Flc3Rlc3RzL2ZpbGV0ZXN0L1wiXG4gICAgbGFzdEFjY2Vzc0RhdGVUaW1lc3RhbXA6IG51bWJlcjsgLy8xNjExMjMzOTMyNTA1XG4gICAgc3RhdGU6IHN0cmluZzsgLy9cIlJFTU9WRURcIlxuXG4gICAgc3RhdGljIGZyb21GaWxlKGRvbWFpbklkOiBzdHJpbmcsZmlsZTogRmlsZSwgdXNlcj86IHN0cmluZyk6IEZpbGVTZXJ2aWNlTWV0YWRhdGEge1xuICAgICAgICBsZXQgZmlsZVNlcnZpY2VNZXRhZGF0YSA9IG5ldyBGaWxlU2VydmljZU1ldGFkYXRhKCk7XG4gICAgICAgIGZpbGVTZXJ2aWNlTWV0YWRhdGEuZG9tYWluSWQgPSBkb21haW5JZDtcbiAgICAgICAgZmlsZVNlcnZpY2VNZXRhZGF0YS5zdWJEb21haW5JZCA9IFwidXNlcnNcIjtcbiAgICAgICAgZmlsZVNlcnZpY2VNZXRhZGF0YS5uYW1lID0gZmlsZS5uYW1lO1xuICAgICAgICBmaWxlU2VydmljZU1ldGFkYXRhLnR5cGUgPSBmaWxlLm5hbWUuc3Vic3RyaW5nKGZpbGUubmFtZS5sYXN0SW5kZXhPZihcIi5cIikrMSk7XG4gICAgICAgIGZpbGVTZXJ2aWNlTWV0YWRhdGEudGltZXN0YW1wID0gRGF0ZS5ub3coKTtcbiAgICAgICAgZmlsZVNlcnZpY2VNZXRhZGF0YS50YWdzID0gbnVsbDtcbiAgICAgICAgZmlsZVNlcnZpY2VNZXRhZGF0YS5lbnRyeVR5cGUgPSBcIkZJTEVcIjtcbiAgICAgICAgZmlsZVNlcnZpY2VNZXRhZGF0YS5zaXplID0gZmlsZS5zaXplO1xuICAgICAgICBmaWxlU2VydmljZU1ldGFkYXRhLnBhdGggPSBbIFxuICAgICAgICAgICAgZmlsZVNlcnZpY2VNZXRhZGF0YS5kb21haW5JZCxcbiAgICAgICAgICAgIGZpbGVTZXJ2aWNlTWV0YWRhdGEuc3ViRG9tYWluSWQsXG4gICAgICAgICAgICB1c2VyXG4gICAgICAgIF1cbiAgICAgICAgcmV0dXJuIGZpbGVTZXJ2aWNlTWV0YWRhdGE7XG4gICAgfVxuXG4gICAgaXNGb2xkZXIoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBcIkRJUkVDVE9SWVwiID09PSB0aGlzLmVudHJ5VHlwZTtcbiAgICB9XG59Il19